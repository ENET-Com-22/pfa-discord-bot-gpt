# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node Js Ci Haitham

on: 
  push: 
    branches: [ "haitham" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: haitham
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm ci
      - name: Run tests
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          OPENAI_ORG: ${{ secrets.OPENAI_ORG }}
        run: npm test
        
  build-and-deploy:
        runs-on: ubuntu-latest
        environment: haitham
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Log in to Docker Hub registry'
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERUSER  }}
            password: ${{ secrets.DOCKERPW }}
            
        - name: Build and push container image to Docker registry
          uses: docker/build-push-action@v4
          with:
              provenance: false
              push: true
              tags: ${{ secrets.DOCKERUSER }}/pfa-discord-bot:latest
              file: ./Dockerfile

        - name: 'Deploy to Azure Container Instances'
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
            image:  ${{ secrets.DOCKERUSER  }}/pfa-discord-bot:latest
            registry-login-server: index.docker.io
            registry-username: ${{ secrets.DOCKERUSER }}
            registry-password: ${{ secrets.DOCKERPW }}
            name: aci-sampleapp
            secure-environment-variables: |
               DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
               OPENAI_KEY=${{ secrets.OPENAI_KEY }}
               OPENAI_ORG=${{ secrets.OPENAI_ORG }}
            location: 'northeurope'
